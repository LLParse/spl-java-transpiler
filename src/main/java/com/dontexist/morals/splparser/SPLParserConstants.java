/* Generated By:JJTree&JavaCC: Do not edit this line. SPLParserConstants.java */
package com.dontexist.morals.splparser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SPLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int AS = 9;
  /** RegularExpression Id. */
  int CALL = 10;
  /** RegularExpression Id. */
  int COMMIT = 11;
  /** RegularExpression Id. */
  int CREATE = 12;
  /** RegularExpression Id. */
  int CURRENT = 13;
  /** RegularExpression Id. */
  int DBA = 14;
  /** RegularExpression Id. */
  int DEFINE = 15;
  /** RegularExpression Id. */
  int EXCEPTION = 16;
  /** RegularExpression Id. */
  int EXECUTE = 17;
  /** RegularExpression Id. */
  int FALSE = 18;
  /** RegularExpression Id. */
  int FRACTION = 19;
  /** RegularExpression Id. */
  int GO = 20;
  /** RegularExpression Id. */
  int GRANT = 21;
  /** RegularExpression Id. */
  int LET = 22;
  /** RegularExpression Id. */
  int NULL = 23;
  /** RegularExpression Id. */
  int ON = 24;
  /** RegularExpression Id. */
  int OFF = 25;
  /** RegularExpression Id. */
  int FILE = 26;
  /** RegularExpression Id. */
  int TRACE = 27;
  /** RegularExpression Id. */
  int DEBUG = 28;
  /** RegularExpression Id. */
  int PROCEDURE = 29;
  /** RegularExpression Id. */
  int RAISE = 30;
  /** RegularExpression Id. */
  int RETURN = 31;
  /** RegularExpression Id. */
  int RETURNING = 32;
  /** RegularExpression Id. */
  int RETURNS = 33;
  /** RegularExpression Id. */
  int REVOKE = 34;
  /** RegularExpression Id. */
  int ROLLBACK = 35;
  /** RegularExpression Id. */
  int SECOND = 36;
  /** RegularExpression Id. */
  int TO = 37;
  /** RegularExpression Id. */
  int TODAY = 38;
  /** RegularExpression Id. */
  int TRUE = 39;
  /** RegularExpression Id. */
  int WORK = 40;
  /** RegularExpression Id. */
  int AND = 41;
  /** RegularExpression Id. */
  int OR = 42;
  /** RegularExpression Id. */
  int IN = 43;
  /** RegularExpression Id. */
  int IS = 44;
  /** RegularExpression Id. */
  int LIKE = 45;
  /** RegularExpression Id. */
  int MATCHES = 46;
  /** RegularExpression Id. */
  int BETWEEN = 47;
  /** RegularExpression Id. */
  int NE = 48;
  /** RegularExpression Id. */
  int NE2 = 49;
  /** RegularExpression Id. */
  int GE = 50;
  /** RegularExpression Id. */
  int GT = 51;
  /** RegularExpression Id. */
  int EQ = 52;
  /** RegularExpression Id. */
  int LE = 53;
  /** RegularExpression Id. */
  int LT = 54;
  /** RegularExpression Id. */
  int NOT = 55;
  /** RegularExpression Id. */
  int SOME = 56;
  /** RegularExpression Id. */
  int ALL = 57;
  /** RegularExpression Id. */
  int ANY = 58;
  /** RegularExpression Id. */
  int CONCAT = 59;
  /** RegularExpression Id. */
  int PLUS = 60;
  /** RegularExpression Id. */
  int MINUS = 61;
  /** RegularExpression Id. */
  int STAR = 62;
  /** RegularExpression Id. */
  int SLASH = 63;
  /** RegularExpression Id. */
  int CAST = 64;
  /** RegularExpression Id. */
  int UNITS = 65;
  /** RegularExpression Id. */
  int BLOB = 66;
  /** RegularExpression Id. */
  int BOOLEAN = 67;
  /** RegularExpression Id. */
  int BYTE = 68;
  /** RegularExpression Id. */
  int CHAR = 69;
  /** RegularExpression Id. */
  int CHARACTER_VARYING = 70;
  /** RegularExpression Id. */
  int CLOB = 71;
  /** RegularExpression Id. */
  int DATE = 72;
  /** RegularExpression Id. */
  int DATETIME = 73;
  /** RegularExpression Id. */
  int DECIMAL = 74;
  /** RegularExpression Id. */
  int FLOAT = 75;
  /** RegularExpression Id. */
  int INT = 76;
  /** RegularExpression Id. */
  int INT8 = 77;
  /** RegularExpression Id. */
  int INTEGER = 78;
  /** RegularExpression Id. */
  int INTERVAL = 79;
  /** RegularExpression Id. */
  int LVARCHAR = 80;
  /** RegularExpression Id. */
  int MONEY = 81;
  /** RegularExpression Id. */
  int NCHAR = 82;
  /** RegularExpression Id. */
  int NVARCHAR = 83;
  /** RegularExpression Id. */
  int SERIAL = 84;
  /** RegularExpression Id. */
  int SERIAL8 = 85;
  /** RegularExpression Id. */
  int SMALLFLOAT = 86;
  /** RegularExpression Id. */
  int SMALLINT = 87;
  /** RegularExpression Id. */
  int TEXT = 88;
  /** RegularExpression Id. */
  int VARCHAR = 89;
  /** RegularExpression Id. */
  int IF = 90;
  /** RegularExpression Id. */
  int THEN = 91;
  /** RegularExpression Id. */
  int ELIF = 92;
  /** RegularExpression Id. */
  int ELSE = 93;
  /** RegularExpression Id. */
  int BEGIN = 94;
  /** RegularExpression Id. */
  int END = 95;
  /** RegularExpression Id. */
  int EXIT = 96;
  /** RegularExpression Id. */
  int CONTINUE = 97;
  /** RegularExpression Id. */
  int SWITCH = 98;
  /** RegularExpression Id. */
  int DO = 99;
  /** RegularExpression Id. */
  int WHILE = 100;
  /** RegularExpression Id. */
  int FOR = 101;
  /** RegularExpression Id. */
  int FOREACH = 102;
  /** RegularExpression Id. */
  int YEAR = 103;
  /** RegularExpression Id. */
  int DAY = 104;
  /** RegularExpression Id. */
  int HOUR = 105;
  /** RegularExpression Id. */
  int MONTH = 106;
  /** RegularExpression Id. */
  int DROP = 107;
  /** RegularExpression Id. */
  int TABLE = 108;
  /** RegularExpression Id. */
  int TEMP = 109;
  /** RegularExpression Id. */
  int WITH = 110;
  /** RegularExpression Id. */
  int HOLD = 111;
  /** RegularExpression Id. */
  int RESUME = 112;
  /** RegularExpression Id. */
  int NO = 113;
  /** RegularExpression Id. */
  int LOG = 114;
  /** RegularExpression Id. */
  int MODE = 115;
  /** RegularExpression Id. */
  int LOCK = 116;
  /** RegularExpression Id. */
  int SHARE = 117;
  /** RegularExpression Id. */
  int EXCLUSIVE = 118;
  /** RegularExpression Id. */
  int INSERT = 119;
  /** RegularExpression Id. */
  int INTO = 120;
  /** RegularExpression Id. */
  int VALUES = 121;
  /** RegularExpression Id. */
  int SELECT = 122;
  /** RegularExpression Id. */
  int UNION = 123;
  /** RegularExpression Id. */
  int DISTINCT = 124;
  /** RegularExpression Id. */
  int UPDATE = 125;
  /** RegularExpression Id. */
  int DELETE = 126;
  /** RegularExpression Id. */
  int SET = 127;
  /** RegularExpression Id. */
  int FROM = 128;
  /** RegularExpression Id. */
  int WHERE = 129;
  /** RegularExpression Id. */
  int ORDER = 130;
  /** RegularExpression Id. */
  int GROUP = 131;
  /** RegularExpression Id. */
  int BY = 132;
  /** RegularExpression Id. */
  int DESC = 133;
  /** RegularExpression Id. */
  int ASC = 134;
  /** RegularExpression Id. */
  int JOIN = 135;
  /** RegularExpression Id. */
  int OUTER = 136;
  /** RegularExpression Id. */
  int INNER = 137;
  /** RegularExpression Id. */
  int LEFT = 138;
  /** RegularExpression Id. */
  int EXISTS = 139;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 140;
  /** RegularExpression Id. */
  int STRING_LITERAL = 141;
  /** RegularExpression Id. */
  int FLOAT_LITERAL = 142;
  /** RegularExpression Id. */
  int IDENTIFIER = 143;
  /** RegularExpression Id. */
  int LETTER = 144;
  /** RegularExpression Id. */
  int DIGIT = 145;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "<token of kind 2>",
    "<token of kind 3>",
    "\" \"",
    "\"\\t\"",
    "\"\\f\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"as\"",
    "\"call\"",
    "\"commit\"",
    "\"create\"",
    "\"current\"",
    "\"dba\"",
    "\"define\"",
    "\"exception\"",
    "\"execute\"",
    "\"false\"",
    "\"fraction\"",
    "\"go\"",
    "\"grant\"",
    "\"let\"",
    "\"null\"",
    "\"on\"",
    "\"off\"",
    "\"file\"",
    "\"trace\"",
    "\"debug\"",
    "\"procedure\"",
    "\"raise\"",
    "\"return\"",
    "\"returning\"",
    "\"returns\"",
    "\"revoke\"",
    "\"rollback\"",
    "\"second\"",
    "\"to\"",
    "\"today\"",
    "\"true\"",
    "\"work\"",
    "\"and\"",
    "\"or\"",
    "\"in\"",
    "\"is\"",
    "\"like\"",
    "\"matches\"",
    "\"between\"",
    "\"!=\"",
    "\"<>\"",
    "\">=\"",
    "\">\"",
    "\"=\"",
    "\"<=\"",
    "\"<\"",
    "\"not\"",
    "\"some\"",
    "\"all\"",
    "\"any\"",
    "\"||\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"::\"",
    "\"units\"",
    "\"blob\"",
    "\"boolean\"",
    "\"byte\"",
    "\"char\"",
    "\"character_varying\"",
    "\"clob\"",
    "\"date\"",
    "\"datetime\"",
    "\"decimal\"",
    "\"float\"",
    "\"int\"",
    "\"int8\"",
    "\"integer\"",
    "\"interval\"",
    "\"lvarchar\"",
    "\"money\"",
    "\"nchar\"",
    "\"nvarchar\"",
    "\"serial\"",
    "\"serial8\"",
    "\"smallfloat\"",
    "\"smallint\"",
    "\"text\"",
    "\"varchar\"",
    "\"if\"",
    "\"then\"",
    "\"elif\"",
    "\"else\"",
    "\"begin\"",
    "\"end\"",
    "\"exit\"",
    "\"continue\"",
    "\"switch\"",
    "\"do\"",
    "\"while\"",
    "\"for\"",
    "\"foreach\"",
    "\"year\"",
    "\"day\"",
    "\"hour\"",
    "\"month\"",
    "\"drop\"",
    "\"table\"",
    "\"temp\"",
    "\"with\"",
    "\"hold\"",
    "\"resume\"",
    "\"no\"",
    "\"log\"",
    "\"mode\"",
    "\"lock\"",
    "\"share\"",
    "\"exclusive\"",
    "\"insert\"",
    "\"into\"",
    "\"values\"",
    "\"select\"",
    "\"union\"",
    "\"distinct\"",
    "\"update\"",
    "\"delete\"",
    "\"set\"",
    "\"from\"",
    "\"where\"",
    "\"order\"",
    "\"group\"",
    "\"by\"",
    "\"desc\"",
    "\"asc\"",
    "\"join\"",
    "\"outer\"",
    "\"inner\"",
    "\"left\"",
    "\"exists\"",
    "<INTEGER_LITERAL>",
    "<STRING_LITERAL>",
    "<FLOAT_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\";\"",
    "\".\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"count\"",
    "\"==\"",
    "\"[\"",
    "\"]\"",
  };

}
