/* Generated By:JavaCC: Do not edit this line. SPLParserTreeConstants.java Version 5.0 */
package com.dontexist.morals.splparser.node;

import com.dontexist.morals.splparser.*;

public interface SPLParserTreeConstants
{
  public int JJTCOMPILATIONUNIT = 0;
  public int JJTVOID = 1;
  public int JJTDECLARATION = 2;
  public int JJTREVOKEDECLARATION = 3;
  public int JJTPROCEDUREDECLARATION = 4;
  public int JJTPROCEDURECONCLUSION = 5;
  public int JJTARGUMENTLIST = 6;
  public int JJTARGUMENT = 7;
  public int JJTPRIMITIVETYPELIST = 8;
  public int JJTPRIMITIVETYPE = 9;
  public int JJTINTERVALPARAMS = 10;
  public int JJTINTERVALPARAM = 11;
  public int JJTIDENTIFIER = 12;
  public int JJTIDENTIFIERLIST = 13;
  public int JJTCOMPOUNDSTATEMENT = 14;
  public int JJTBLOCKSTATEMENT = 15;
  public int JJTDEFINITIONSTATEMENT = 16;
  public int JJTEXPRESSIONSTATEMENT = 17;
  public int JJTIFCLAUSE = 18;
  public int JJTELIFCLAUSE = 19;
  public int JJTELSECLAUSE = 20;
  public int JJTFORSTATEMENT = 21;
  public int JJTFOREACHSTATEMENT = 22;
  public int JJTWHILESTATEMENT = 23;
  public int JJTCONTINUELOOPSTATEMENT = 24;
  public int JJTEXITLOOPSTATEMENT = 25;
  public int JJTTRACESTATEMENT = 26;
  public int JJTTRACEARGUMENT = 27;
  public int JJTSETDEBUGFILESTATEMENT = 28;
  public int JJTRETURNSTATEMENT = 29;
  public int JJTONEXCEPTIONSTATEMENT = 30;
  public int JJTRAISEEXCEPTIONSTATEMENT = 31;
  public int JJTTRANSACTIONSTATEMENT = 32;
  public int JJTEXPRESSIONLIST = 33;
  public int JJTASSIGNMENTEXPRESSION = 34;
  public int JJTOREXPRESSION = 35;
  public int JJTANDEXPRESSION = 36;
  public int JJTPREPOSITIONEXPRESSION = 37;
  public int JJTCOMPARISONEXPRESSION = 38;
  public int JJTNOTEXPRESSION = 39;
  public int JJTQUANTITATIVEEXPRESSION = 40;
  public int JJTCONCATENATIONEXPRESSION = 41;
  public int JJTADDITIVEEXPRESSION = 42;
  public int JJTMULTIPLICATIVEEXPRESSION = 43;
  public int JJTUNARYEXPRESSION = 44;
  public int JJTPOSTFIXEXPRESSION = 45;
  public int JJTUNITSEXPRESSION = 46;
  public int JJTSUBSTRINGEXPRESSION = 47;
  public int JJTNESTEDEXPRESSION = 48;
  public int JJTLITERAL = 49;
  public int JJTSQLSTATEMENT = 50;
  public int JJTLOCKTABLEEXPRESSION = 51;
  public int JJTDROPTABLEEXPRESSION = 52;
  public int JJTCREATETABLESTATEMENT = 53;
  public int JJTINSERTEXPRESSION = 54;
  public int JJTSELECTEXPRESSION = 55;
  public int JJTUPDATEEXPRESSION = 56;
  public int JJTDELETEEXPRESSION = 57;
  public int JJTDELETECLAUSE = 58;
  public int JJTINSERTCLAUSE = 59;
  public int JJTSELECTCLAUSE = 60;
  public int JJTUPDATECLAUSE = 61;
  public int JJTFROMCLAUSE = 62;
  public int JJTINTOCLAUSE = 63;
  public int JJTVALUESCLAUSE = 64;
  public int JJTSETCLAUSE = 65;
  public int JJTSETEXPRESSIONLIST = 66;
  public int JJTSETEXPRESSION = 67;
  public int JJTWHERECLAUSE = 68;
  public int JJTGROUPBYCLAUSE = 69;
  public int JJTORDERBYCLAUSE = 70;
  public int JJTFROMEXPRESSIONLIST = 71;
  public int JJTFROMEXPRESSION = 72;
  public int JJTORDERBYEXPRESSIONLIST = 73;
  public int JJTORDERBYEXPRESSION = 74;
  public int JJTTABLEDECLLIST = 75;
  public int JJTTABLEDECL = 76;
  public int JJTASSIGNMENTSTATEMENTLIST = 77;
  public int JJTASSIGNMENTSTATEMENT = 78;


  public String[] jjtNodeName = {
    "CompilationUnit",
    "void",
    "Declaration",
    "RevokeDeclaration",
    "ProcedureDeclaration",
    "ProcedureConclusion",
    "ArgumentList",
    "Argument",
    "PrimitiveTypeList",
    "PrimitiveType",
    "intervalParams",
    "intervalParam",
    "Identifier",
    "IdentifierList",
    "CompoundStatement",
    "BlockStatement",
    "DefinitionStatement",
    "ExpressionStatement",
    "IfClause",
    "ElifClause",
    "ElseClause",
    "ForStatement",
    "ForEachStatement",
    "WhileStatement",
    "ContinueLoopStatement",
    "ExitLoopStatement",
    "TraceStatement",
    "TraceArgument",
    "SetDebugFileStatement",
    "ReturnStatement",
    "OnExceptionStatement",
    "RaiseExceptionStatement",
    "TransactionStatement",
    "ExpressionList",
    "assignmentExpression",
    "orExpression",
    "andExpression",
    "prepositionExpression",
    "comparisonExpression",
    "notExpression",
    "quantitativeExpression",
    "concatenationExpression",
    "additiveExpression",
    "multiplicativeExpression",
    "unaryExpression",
    "postfixExpression",
    "unitsExpression",
    "substringExpression",
    "NestedExpression",
    "Literal",
    "SQLStatement",
    "LockTableExpression",
    "dropTableExpression",
    "CreateTableStatement",
    "InsertExpression",
    "SelectExpression",
    "UpdateExpression",
    "DeleteExpression",
    "DeleteClause",
    "InsertClause",
    "SelectClause",
    "UpdateClause",
    "FromClause",
    "IntoClause",
    "ValuesClause",
    "SetClause",
    "SetExpressionList",
    "SetExpression",
    "WhereClause",
    "GroupByClause",
    "OrderByClause",
    "FromExpressionList",
    "FromExpression",
    "OrderByExpressionList",
    "OrderByExpression",
    "TableDeclList",
    "TableDecl",
    "AssignmentStatementList",
    "AssignmentStatement",
  };
}
/* JavaCC - OriginalChecksum=013724000f0d313ebdea73f1249e826c (do not edit this line) */
