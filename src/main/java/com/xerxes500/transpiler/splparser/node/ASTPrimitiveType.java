/* Generated By:JJTree: Do not edit this line. ASTPrimitiveType.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.xerxes500.transpiler.splparser.node;

import com.xerxes500.transpiler.splparser.*;

public
class ASTPrimitiveType extends SimpleNode {
   protected String type;
   
  public ASTPrimitiveType(int id) {
    super(id);
  }

  public ASTPrimitiveType(SPLParser p, int id) {
    super(p, id);
  }
  
  public void setType(String type) {
     this.type = type;
  }
  
  public String getType() {
     if (type.equals("char") || type.equals("character_varying") || type.equals("lvarchar") || type.equals("nchar") || type.equals("nvarchar") || type.equals("varchar") || type.equals("byte") || type.equals("text") || type.equals("blob") || type.equals("clob"))
        return "String";
     else if (type.equals("integer") || type.equals("smallint") || type.equals("int") || type.equals("int8") || type.equals("serial") || type.equals("serial8"))
        return "Integer";
     else if (type.equals("date") || type.equals("interval"))
        return "DateTime";
     else if (type.equals("datetime"))
        return "DateTime";
     else if (type.equals("float") || type.equals("decimal") || type.equals("money") || type.equals("smallfloat"))
        return "Double";
     else if (type.equals("boolean"))
        return "Boolean";
     else
        return "Void";
  }


  /** Accept the visitor. **/
  public Object jjtAccept(SPLParserVisitor visitor, Object data) {
    return visitor.visit(this, data);
  }
}
/* JavaCC - OriginalChecksum=65b253537ce665bf0f269b3cc288421f (do not edit this line) */
