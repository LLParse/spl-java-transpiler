/* Generated By:JJTree: Do not edit this line. ASTIdentifier.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.xerxes500.transpiler.splparser.node;

import com.xerxes500.transpiler.splparser.*;

public class ASTIdentifier extends SimpleNode {
   private String name, modifier;

   public ASTIdentifier(int id) {
      super(id);
   }

   public ASTIdentifier(SPLParser p, int id) {
      super(p, id);
   }

   public void setName(String name) {
      // lower case because stupid SPL is case insensitive
      this.name = name.toLowerCase();
      
      // we need to translate variables that collide with java reserved words
      if (this.name.equals("class"))
         this.name = "clazz";
   }

   public String getName() {
      return name;
   }

   public void setModifier(String modifier) {
      this.modifier = modifier;
   }

   public String getModifier() {
      return modifier;
   }

   /** Accept the visitor. **/
   public Object jjtAccept(SPLParserVisitor visitor, Object data) {
      return visitor.visit(this, data);
   }
}
/* JavaCC - OriginalChecksum=60bb1cb26f4ddced8ed075e0800c2331 (do not edit this line) */
