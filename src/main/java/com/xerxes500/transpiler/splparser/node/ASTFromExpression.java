/* Generated By:JJTree: Do not edit this line. ASTFromExpression.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.xerxes500.transpiler.splparser.node;

import com.xerxes500.transpiler.splparser.*;

public class ASTFromExpression extends SimpleNode {
   private boolean joinClause = false;
   private boolean inner      = false;
   private boolean outer      = false;

   public ASTFromExpression(int id) {
      super(id);
   }

   public ASTFromExpression(SPLParser p, int id) {
      super(p, id);
   }

   public void setJoinClause(boolean joinClause) {
      this.joinClause = joinClause;
   }

   public boolean isJoinClause() {
      return joinClause;
   }

   public void setInner(boolean inner) {
      this.inner = inner;
   }

   public boolean isInner() {
      return inner;
   }

   public void setOuter(boolean outer) {
      this.outer = outer;
   }

   public boolean isOuter() {
      return outer;
   }

   /** Accept the visitor. **/
   public Object jjtAccept(SPLParserVisitor visitor, Object data) {
      return visitor.visit(this, data);
   }
}
/* JavaCC - OriginalChecksum=c4285bbaa62480436974bf0a76d55bb4 (do not edit this line) */
